{"version":3,"sources":["webpack:///webpack/bootstrap fd1142d878f9f14920ff","webpack:///external \"inversify\"","webpack:///./src/service/card/index.ts","webpack:///./src/service/user-authentication/index.ts","webpack:///external \"mongoose\"","webpack:///./src/models/index.ts","webpack:///./src/constants/db.ts","webpack:///./src/service/linkedinInfoParser/index.ts","webpack:///external \"inversify-express-utils\"","webpack:///./src/service/services-registration.ts","webpack:///./src/service/desk/index.ts","webpack:///./src/service/parser/index.ts","webpack:///./src/app.ts","webpack:///external \"reflect-metadata\"","webpack:///external \"body-parser\"","webpack:///external \"morgan\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"path\"","webpack:///external \"socket.io\"","webpack:///./src/controller/index.ts","webpack:///./src/controller/user.controller.ts","webpack:///./src/service/user-authentication/user-authentication.ts","webpack:///./src/models/user.ts","webpack:///./src/models/card.ts","webpack:///./src/models/deck.ts","webpack:///./src/service/card/card.repository.ts","webpack:///./src/service/index.ts","webpack:///external \"inversify-inject-decorators\"","webpack:///./src/service/desk/desk.repository.ts","webpack:///./src/service/linkedinInfoParser/linkedinInfoParser.ts","webpack:///./src/service/parser/parser.service.ts","webpack:///external \"child_process\"","webpack:///external \"fs-extra\"","webpack:///./src/service/socket/index.ts","webpack:///./src/service/socket/socket.service.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","__export","DB_URL","USER_COLLECTION","CARD_COLLECTION","DECK_COLLECTION","inversify_1","inversify_inject_decorators_1","__importDefault","user_authentication_1","card_1","desk_1","linkedinInfoParser_1","parser_1","CONTAINER","Container","bind","UserAuthenticationRepository","to","CardRepository","DeskRepository","LinkedinInfoParserService","ParserService","inject","default","lazyInject","inversify_express_utils_1","body_parser_1","morgan_1","cors_1","express_1","path_1","socket_io_1","services_registration_1","socket_1","server","InversifyExpressServer","setConfig","app","use","urlencoded","extended","json","static","join","__dirname","application","build","port","process","env","PORT","serverInstance","listen","console","log","SocketService","getInstance","setSocket","service_1","data","currentPosition","skills","education","image","connections","UserController","userAuthenticationRepository","cardRepository","deskRepository","linkedinInfoParserService","parserService","this","googleAuth","request","response","_a","body","email","accessToken","socialNetworksLogin","error","status","saveCard","getCards","updateImage","userEmail","cardIds","updateCard","getDeckCards","params","TestParser","parseProfileData","parseUser","sent","error_1","__decorate","httpPost","httpGet","httpPut","controller","__param","mongoose_1","models_1","db_1","mongoose","Mongoose","userModel","model","Schema","USER_SCHEMA","connect","newUser","Promise","resolve","reject","save","_id","injectable","type","String","required","CARD_SCHEMA","Number","DECK_SCHEMA","cardModel","newCard","_this","find","deckModel","createDeck","newDeck","findOneAndUpdate","__awaiter","newDate","findOne","cards","deckCards","filter","card","findIndex","cardId","ignoreSkillsJson","HTML","CSS","JavaScript","React","D3.js","Webpack","SQL","C#","ASP.NET","Java","Android",".NET","arduino","Arduino","C++","C","Rust","skillsValues","profile","coreSkills","superSkill","hp","length","slice","map","skill","indexOf","reduce","acc","cur","connection","superSkillsArray","createAttack","value","resultObj","current","ignore","result","concat","ignoreSkills","child_process_1","fs","__importStar","args","spawn","stdio","shell","cwd","on","path","pathExists","readJson","parsedData","clients","SocketService_1","instance","Error","socketIO","client","push","emit","onDisconnect","notifyOtherUser","splice","swapStepData","newData","forEach","gameStepData","id","newGameStepData"],"mappings":"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","file":"community-app-server.app.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd1142d878f9f14920ff","module.exports = require(\"inversify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"inversify\"\n// module id = 0\n// module chunks = 0","export * from './card.repository';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/card/index.ts","export * from './user-authentication';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/user-authentication/index.ts","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 3\n// module chunks = 0","export * from './user';\r\nexport * from './card';\r\nexport * from './deck';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts","// tslint:disable-next-line:max-line-length\r\nexport const DB_URL: string = 'mongodb://it-stone:g3QMmzLgTp1qGRXf2n89jVlc5iVxHGVeO9zTguvH8W90sdEeLB9BxEIe00F7XmDwEg1Z9DeXHe0SEEWmTSaabg%3D%3D@it-stone.documents.azure.com:10255/?ssl=true';\r\nexport const USER_COLLECTION: string = 'user';\r\nexport const CARD_COLLECTION: string = 'card';\r\nexport const DECK_COLLECTION: string = 'deck';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/db.ts","export * from './linkedinInfoParser';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/linkedinInfoParser/index.ts","module.exports = require(\"inversify-express-utils\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"inversify-express-utils\"\n// module id = 7\n// module chunks = 0","import { Container } from 'inversify';\r\nimport getDecorators from 'inversify-inject-decorators';\r\n\r\nimport { UserAuthenticationRepository } from './user-authentication';\r\nimport { CardRepository } from './card';\r\nimport { DeskRepository } from './desk';\r\nimport { LinkedinInfoParserService } from './linkedinInfoParser';\r\nimport { ParserService } from './parser';\r\n\r\nexport const CONTAINER = new Container();\r\n\r\nCONTAINER.bind<UserAuthenticationRepository>(UserAuthenticationRepository).to(UserAuthenticationRepository);\r\nCONTAINER.bind<CardRepository>(CardRepository).to(CardRepository);\r\nCONTAINER.bind<DeskRepository>(DeskRepository).to(DeskRepository);\r\nCONTAINER.bind<LinkedinInfoParserService>(LinkedinInfoParserService).to(LinkedinInfoParserService);\r\nCONTAINER.bind<ParserService>(ParserService).to(ParserService);\r\n\r\nexport const inject = getDecorators(CONTAINER).lazyInject;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/services-registration.ts","export * from './desk.repository';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/desk/index.ts","export * from './parser.service';\n\n\n// WEBPACK FOOTER //\n// ./src/service/parser/index.ts","import 'reflect-metadata';\r\n\r\nimport { InversifyExpressServer } from 'inversify-express-utils';\r\n\r\nimport bodyParser from 'body-parser';\r\nimport morgan from 'morgan';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport path from 'path';\r\nimport SocketIO from 'socket.io';\r\n\r\nimport './controller';\r\nimport { CONTAINER } from './service/services-registration';\r\nimport { SocketService } from 'service/socket';\r\n\r\nconst server = new InversifyExpressServer(CONTAINER);\r\n\r\nserver.setConfig((app) => {\r\n    app.use(morgan('dev'));\r\n    app.use(cors());\r\n    app.use(bodyParser.urlencoded({\r\n        extended: true\r\n    }));\r\n    app.use(bodyParser.json());\r\n    app.use(express.static(path.join(__dirname, '../../client/dist/client')));\r\n});\r\n\r\nconst application = server.build();\r\n\r\nconst port = process.env.PORT || 3030;\r\nconst serverInstance = application.listen(port, () => {\r\n    console.log('Press CTRL+C to stop\\n');\r\n});\r\n\r\nconst socketService: SocketService = SocketService.getInstance();\r\nsocketService.setSocket(SocketIO(serverInstance));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","module.exports = require(\"reflect-metadata\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"reflect-metadata\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cors\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 18\n// module chunks = 0","export * from './user.controller';\n\n\n// WEBPACK FOOTER //\n// ./src/controller/index.ts","import { controller, httpPost, httpGet, httpPut } from 'inversify-express-utils';\r\nimport { Request, Response } from 'express';\r\nimport { inject } from 'inversify';\r\n\r\nimport { UserAuthenticationRepository } from 'service/user-authentication';\r\nimport { User, Card, Deck } from '../models';\r\nimport { CardRepository } from '../service/card';\r\nimport { DeskRepository, ParserService } from 'service';\r\nimport { LinkedinInfoParserService } from 'service/linkedinInfoParser';\r\n\r\nconst data = {\r\n  name: 'Nikita Bazhkou',\r\n  currentPosition: '.Net Software Engineer - EPAM Systems',\r\n  skills: [\r\n      'C#',\r\n      'JavaScript',\r\n      'SQL',\r\n      'Microsoft SQL Server',\r\n      'Cascading Style Sheets (CSS)',\r\n      'ASP.NET Core',\r\n      'ASP.NET MVC 5',\r\n      'Entity Framework',\r\n      'LINQ',\r\n      'ADO.NET',\r\n      'jQuery',\r\n      'React.js',\r\n      'Angular',\r\n      'git',\r\n      'AJAX',\r\n      'JIRA',\r\n      'Solr',\r\n      'EPiServer CMS',\r\n      'EPiServer Commerce'\r\n  ],\r\n  education: 5,\r\n  // tslint:disable-next-line:max-line-length\r\n  image: 'https://media.licdn.com/dms/image/C4E03AQHQPp3axkhdSA/profile-displayphoto-shrink_800_800/0?e=1545264000&v=beta&t=NkQL-yaMMRa4WzI22Ks9xrmeTLekzYAjYnhGWD1Nc1Y',\r\n  connections: 50\r\n};\r\n\r\n@controller('/api/users')\r\nexport class UserController {\r\n\r\n  constructor(\r\n    @inject(UserAuthenticationRepository) private userAuthenticationRepository: UserAuthenticationRepository,\r\n    @inject(CardRepository) private cardRepository: CardRepository,\r\n    @inject(DeskRepository) private deskRepository: DeskRepository,\r\n    @inject(LinkedinInfoParserService) private linkedinInfoParserService: LinkedinInfoParserService,\r\n    @inject(ParserService) private parserService: ParserService,\r\n  ) { }\r\n\r\n  @httpPost('/google-auth')\r\n  public async googleAuth(request: Request, response: Response): Promise<Response | User> {\r\n    const { email, name, accessToken } = request.body;\r\n    try {\r\n      return this.userAuthenticationRepository.socialNetworksLogin(email, name, accessToken);\r\n    } catch (error) {\r\n      return response.status(500).json(error)\r\n    }\r\n  }\r\n\r\n  @httpPost('/save-card')\r\n  public async saveCard(request: Request, response: Response): Promise<Response | Card> {\r\n    const { name, currentPosition, education, skills, image } = request.body;\r\n    try {\r\n      return this.cardRepository.saveCard(name, currentPosition, education, skills, image);\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n\r\n  @httpGet('/get-cards')\r\n  public async getCards(request: Request, response: Response): Promise<Response | Card[]> {\r\n    try {\r\n      return this.cardRepository.getCards();\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n\r\n  @httpPut('/update-deck')\r\n  public async updateImage(request: Request, response: Response): Promise<Response | Deck> {\r\n    const userEmail = request.body.email;\r\n    const cardIds = request.body.cardIds;\r\n\r\n    try {\r\n      return this.deskRepository.updateCard(userEmail, cardIds)\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n\r\n  @httpGet('/get-deck-cards/:userEmail')\r\n  public async getDeckCards(request: Request, response: Response): Promise<Response | Card[]> {\r\n    const userEmail = request.params.userEmail;\r\n\r\n    try {\r\n      return this.deskRepository.getDeckCards(userEmail);\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n\r\n  @httpGet('/test-parser')\r\n  public async TestParser(request: Request, response: Response): Promise<Response | Card[]> {\r\n    const userEmail = request.params.userEmail;\r\n\r\n    try {\r\n      return this.linkedinInfoParserService.parseProfileData(data);\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n  @httpPost('/parseUser')\r\n  public async parseUser(request: Request, response: Response): Promise<Response | string> {\r\n    const { name } = request.body;\r\n\r\n    console.log(name, \"name parse\");\r\n\r\n    try {\r\n      return await this.parserService.parseUser(name);\r\n    } catch (error) {\r\n      return response.status(500).json(error);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/controller/user.controller.ts","import { injectable } from 'inversify';\r\nimport { Mongoose, Schema, Model } from 'mongoose';\r\n\r\nimport { USER_SCHEMA, User } from '../../models';\r\nimport {\r\n    DB_URL,\r\n    USER_COLLECTION,\r\n} from '../../constants/db';\r\n\r\n@injectable()\r\nexport class UserAuthenticationRepository {\r\n\r\n    private mongoose: Mongoose = new Mongoose();\r\n    private userModel: Model<User> = this.mongoose.model<User>(USER_COLLECTION, new Schema(USER_SCHEMA));\r\n\r\n    constructor() {\r\n        this.mongoose.connect(DB_URL);\r\n    }\r\n\r\n    public async socialNetworksLogin(\r\n        email: string,\r\n        name: string,\r\n        accessToken: string,\r\n    ): Promise<User> {\r\n        const newUser: User = new this.userModel({ email, name, accessToken });\r\n\r\n        return new Promise<User>((resolve, reject) => {\r\n            newUser.save((error, data: User) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    console.log(error);\r\n                } else {\r\n                    resolve(data);\r\n                    console.log(`Save ${data._id} user success`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/user-authentication/user-authentication.ts","import * as mongoose from 'mongoose';\r\n\r\nexport interface User extends mongoose.Document {\r\n    email: string;\r\n    name: string;\r\n    accessToken: string;\r\n}\r\n\r\nexport const USER_SCHEMA = {\r\n    email: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    name: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    accessToken: {\r\n        type: String,\r\n        required: true\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","import * as mongoose from 'mongoose';\r\n\r\nexport interface Card extends mongoose.Document {\r\n    name: string;\r\n    currentPosition: string;\r\n    education: number;\r\n    skills: string[];\r\n    image: string;\r\n}\r\n\r\nexport const CARD_SCHEMA = {\r\n    name: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    currentPosition: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    image: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    education: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    skills: {\r\n        type: [String],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/card.ts","import * as mongoose from 'mongoose';\r\nimport { Card, CARD_SCHEMA } from './card';\r\n\r\nexport interface Deck extends mongoose.Document {\r\n    userEmail: string;\r\n    cardIds: string[];\r\n}\r\n\r\nexport const DECK_SCHEMA = {\r\n    userEmail: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    cardIds: {\r\n        type: [String],\r\n    },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/deck.ts","\r\nimport { injectable } from 'inversify';\r\nimport { Mongoose, Schema, Model } from 'mongoose';\r\n\r\nimport { Card, CARD_SCHEMA } from '../../models';\r\n\r\nimport {\r\n    DB_URL,\r\n    CARD_COLLECTION,\r\n} from '../../constants/db';\r\n\r\n@injectable()\r\nexport class CardRepository {\r\n\r\n    private mongoose: Mongoose = new Mongoose();\r\n    private cardModel: Model<Card> = this.mongoose.model<Card>(CARD_COLLECTION, new Schema(CARD_SCHEMA));\r\n\r\n    constructor() {\r\n        this.mongoose.connect(DB_URL);\r\n    }\r\n\r\n    public async saveCard(\r\n        name: string,\r\n        currentPosition: string,\r\n        education: number,\r\n        skills: string[],\r\n        image: string,\r\n    ): Promise<Card> {\r\n        const newCard: Card = new this.cardModel({\r\n            name,\r\n            currentPosition,\r\n            education,\r\n            skills,\r\n            image\r\n        });\r\n\r\n        return new Promise<Card>((resolve, reject) => {\r\n            newCard.save((error, data: Card) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    console.log(error);\r\n                } else {\r\n                    resolve(data);\r\n                    console.log(`Save ${data._id} card success`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public async getCards(): Promise<Card[]> {\r\n        return new Promise<Card[]>((resolve, reject) => {\r\n            this.cardModel.find({}, (error, data: Card[]) => {\r\n                if (error) {\r\n                    reject(error);\r\n                } else {\r\n                    resolve(data);\r\n                    console.log(`Get all cards`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/card/card.repository.ts","export * from './user-authentication';\r\nexport * from './services-registration';\r\nexport * from './card';\r\nexport * from './desk';\r\nexport * from './parser';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/index.ts","module.exports = require(\"inversify-inject-decorators\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"inversify-inject-decorators\"\n// module id = 27\n// module chunks = 0","\r\nimport { injectable, inject } from 'inversify';\r\nimport { Mongoose, Schema, Model } from 'mongoose';\r\n\r\nimport { Deck, DECK_SCHEMA, Card } from '../../models';\r\n\r\nimport {\r\n    DB_URL,\r\n    DECK_COLLECTION,\r\n} from '../../constants/db';\r\nimport { CardRepository } from '../card';\r\n\r\n@injectable()\r\nexport class DeskRepository {\r\n\r\n    private mongoose: Mongoose = new Mongoose();\r\n    private deckModel: Model<Deck> = this.mongoose.model<Deck>(DECK_COLLECTION, new Schema(DECK_SCHEMA));\r\n\r\n    constructor(\r\n        @inject(CardRepository) private cardRepository: CardRepository,\r\n    ) {\r\n        this.mongoose.connect(DB_URL);\r\n    }\r\n\r\n    public async createDeck(userEmail: string, cardIds: string[]): Promise<Deck> {\r\n        const newDeck: Deck = new this.deckModel({\r\n            userEmail,\r\n            cardIds,\r\n        });\r\n\r\n        return new Promise<Deck>((resolve, reject) => {\r\n            newDeck.save((error, data: Deck) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    console.log(error);\r\n                } else {\r\n                    resolve(data);\r\n                    console.log(`Save ${data._id} deck success`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public async updateCard(userEmail: string, cardIds: string[]): Promise<Deck> {\r\n        return new Promise<Deck>((resolve, reject) => {\r\n            this.deckModel.findOneAndUpdate({ userEmail }, cardIds, async (error, data: Deck) => {\r\n                if (error) {\r\n                    reject(error);\r\n                } else {\r\n                    if (!data) {\r\n                        const newDate = await this.createDeck(userEmail, cardIds);\r\n                        resolve(newDate);\r\n                    } else {\r\n                        resolve(data);\r\n                        console.log(`Update ${data.userEmail} image success`);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public async getDeckCards(userEmail: string): Promise<Card[]> {\r\n        return new Promise<Card[]>((resolve, reject) => {\r\n            this.deckModel.findOne({ userEmail }, async (error, data: Deck) => {\r\n                if (error) {\r\n                    reject(error);\r\n                } else {\r\n                    const cards = await this.cardRepository.getCards();\r\n\r\n                    const deckCards: Card[] = cards.filter((card) => data.cardIds\r\n                        .findIndex((cardId) => cardId === card._id) !== -1);\r\n                    resolve(deckCards);\r\n                    console.log(`Get deck cards`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/desk/desk.repository.ts","const ignoreSkillsJson: any = {\r\n    'HTML': 'XML',\r\n    'CSS': [\r\n        'Sass',\r\n        'Less'\r\n    ],\r\n    'JavaScript': [\r\n        'TypeScript'\r\n    ],\r\n    'React': [\r\n        'Angular',\r\n        'AngularJS',\r\n        'Vue.js'\r\n    ],\r\n    'D3.js': 6,\r\n    'Webpack': [\r\n        'Grunt',\r\n        'Gulp'\r\n    ],\r\n    'SQL': [\r\n        'NOSQL'\r\n    ],\r\n    'C#': [\r\n        'Java'\r\n    ],\r\n    'ASP.NET': 4,\r\n    'Java': [\r\n        '.Net',\r\n        'C#'\r\n    ],\r\n    'Android': 1,\r\n    '.NET': 'Java',\r\n    'arduino': 9,\r\n    'Arduino': [\r\n        'C'\r\n    ],\r\n    'C++': '',\r\n    'C': 'Rust',\r\n    'Rust': 'C'\r\n};\r\n\r\nlet superSkillsArray = (coreSkills: any) => {\r\n    if (coreSkills.indexOf(\"Java\") !== -1) {\r\n\r\n        return (education: any) => {\r\n\r\n            return (connection: any) => {\r\n                if (education <= 2) {\r\n                    return \"easyJava\";\r\n                }\r\n\r\n                if (connection <= 50) {\r\n                    return \"mediumJava\";\r\n                }\r\n\r\n                return \"hardJava\";\r\n            };\r\n        }\r\n    }\r\n\r\n    if (coreSkills.indexOf(\".Net\") !== -1 || coreSkills.indexOf(\"C#\") !== -1) {\r\n        return (education: any) => {\r\n\r\n            return (connection: any) => {\r\n\r\n                if (education <= 2) {\r\n                    return \"easy.Net\";\r\n                }\r\n\r\n                if (connection <= 50) {\r\n                    return \"medium.Net\";\r\n                }\r\n\r\n                return \"hard.Net\";\r\n            };\r\n        }\r\n    }\r\n\r\n    return (education: any) => {\r\n        return (connections: any) => {\r\n            return \"Base\";\r\n        }\r\n    }\r\n}\r\n\r\nconst skillsValues: any = {\r\n    'HTML': 1,\r\n    'CSS': 2,\r\n    'JavaScript': 7,\r\n    'React': 6,\r\n    'D3.js': 6,\r\n    'Webpack': 3,\r\n    'SQL': 4,\r\n    'C#': 1,\r\n    'ASP.NET': 4,\r\n    'Java': 0,\r\n    'Android': 1,\r\n    '.NET': 4,\r\n    'arduino': 9,\r\n    'Arduino': 10,\r\n    'C++': 10,\r\n    'C': 10\r\n};\r\nimport { injectable } from 'inversify';\r\n\r\n@injectable()\r\nexport class LinkedinInfoParserService {\r\n    public parseProfileData(data: any): any {\r\n        const skills = data.skills;\r\n\r\n        const createAttack = (skills: any) => {\r\n            return skills\r\n                .map((skill: any) => skillsValues[skill] ? { skill, value: skillsValues[skill], } : { skill, value: 2 })\r\n                .reduce((resultObj: any, current: any) => {\r\n                    resultObj[current.skill] = current.value;\r\n                    return resultObj\r\n                }, {});\r\n        };\r\n\r\n        const ignoreSkills = (skills: any) => {\r\n            return skills\r\n                .map((skill: any) => ignoreSkillsJson[skill] ? ignoreSkillsJson[skill] : [])\r\n                .reduce((result: any, current: any) => [...result, ...current], []);\r\n        }\r\n\r\n        const getSuperSkill = (profile: any): any => {\r\n            const education = profile.education || 0;\r\n            const connections = profile.connections || 0;\r\n            const skills = profile.skills;\r\n            const coreSkills = skills.slice(0, 3);\r\n\r\n            return superSkillsArray(coreSkills)(education)(connections);\r\n        };\r\n\r\n        const getCoef = (coreSkills: any) => {\r\n            const superSkill = ['.Net', 'JavaScript', 'TypeScript', 'C#'];\r\n            return coreSkills.map((skill: any) => superSkill.indexOf(skill) !== -1 ? 1.5 : 1).reduce((acc: any, cur: any) => acc * cur, 1);\r\n        };\r\n\r\n        return {\r\n            name: data.name,\r\n            image: data.image,\r\n            hp: (data.education + data.skills.length) * getCoef(skills.slice(0, 3)),\r\n            superSkill: getSuperSkill(data),\r\n            createAttack: createAttack(data.skills),\r\n            ignore: ignoreSkills(skills)\r\n        };\r\n    }\r\n}\r\n\r\n// const parser = new LinkedinInfoParserService();\r\n\r\n// const data = {\r\n//     name: 'Nikita Bazhkou',\r\n//     currentPosition: '.Net Software Engineer - EPAM Systems',\r\n//     skills: [\r\n//         'C#',\r\n//         'JavaScript',\r\n//         'SQL',\r\n//         'Microsoft SQL Server',\r\n//         'Cascading Style Sheets (CSS)',\r\n//         'ASP.NET Core',\r\n//         'ASP.NET MVC 5',\r\n//         'Entity Framework',\r\n//         'LINQ',\r\n//         'ADO.NET',\r\n//         'jQuery',\r\n//         'React.js',\r\n//         'Angular',\r\n//         'git',\r\n//         'AJAX',\r\n//         'JIRA',\r\n//         'Solr',\r\n//         'EPiServer CMS',\r\n//         'EPiServer Commerce'\r\n//     ],\r\n//     education: 5,\r\n//     // tslint:disable-next-line:max-line-length\r\n//     image: 'https://media.licdn.com/dms/image/C4E03AQHQPp3axkhdSA/profile-displayphoto-shrink_800_800/0?e=1545264000&v=beta&t=NkQL-yaMMRa4WzI22Ks9xrmeTLekzYAjYnhGWD1Nc1Y',\r\n//     connections: 50\r\n// };\r\n\r\n// console.log(parser.parseProfileData(data));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/linkedinInfoParser/linkedinInfoParser.ts","import { injectable, inject } from 'inversify';\r\nimport { spawn } from 'child_process';\r\nimport * as fs from 'fs-extra';\r\nimport { LinkedinInfoParserService } from 'service/linkedinInfoParser';\r\n\r\n@injectable()\r\nexport class ParserService {\r\n\r\n    public constructor(\r\n        @inject(LinkedinInfoParserService) private linkedinInfoParserService: LinkedinInfoParserService,\r\n    ) { }\r\n\r\n    public parseUser(name: string): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const opt = {\r\n                stdio: 'inherit',\r\n                shell: true,\r\n                cwd: '../linkedInParser',\r\n            };\r\n\r\n            // tslint:disable-next-line:max-line-length\r\n            const args = [`run test -- --params.login.email=wot220697@gmail.com --params.login.password=Kin11001 --params.search.username=\\\"${name}\\\"`];\r\n\r\n            console.log(__dirname, \"__dirname before spawn\");\r\n            const child = spawn('npm', args, opt);\r\n\r\n            child.on('close', async () => {\r\n                const path = `../linkedInParser/${name}.json`;\r\n\r\n                console.log(__dirname, \"__dirname on close\");\r\n\r\n                const isPathExist = await fs.pathExists(path);\r\n\r\n                if (!isPathExist) {\r\n                    reject();\r\n                }\r\n\r\n                const json = await fs.readJson(path);\r\n\r\n                console.log('JSON DATA', json);\r\n\r\n                const parsedData = this.linkedinInfoParserService.parseProfileData(json);\r\n\r\n                resolve(parsedData);\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/parser/parser.service.ts","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 31\n// module chunks = 0","module.exports = require(\"fs-extra\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs-extra\"\n// module id = 32\n// module chunks = 0","export * from './socket.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/socket/index.ts","import { injectable } from 'inversify';\r\nimport SocketIO from 'socket.io';\r\n\r\ninterface GameStepData {\r\n  id: 1 | 2 | 3 | 4;\r\n  cards: any[];\r\n}\r\n\r\n@injectable()\r\nexport class SocketService {\r\n  private static instance: SocketService;\r\n  private clients: SocketIO.Socket[] = [];\r\n\r\n  private constructor() {\r\n    if (SocketService.instance) {\r\n      throw new Error('You try to destroy singleton');\r\n    }\r\n  }\r\n\r\n  public static getInstance() {\r\n    if (!SocketService.instance) {\r\n      SocketService.instance = new SocketService();\r\n    }\r\n    return SocketService.instance;\r\n  }\r\n\r\n  public async setSocket(socketIO: SocketIO.Server): Promise<void | Response> {\r\n\r\n    socketIO.on('connection', (client: SocketIO.Socket) => {\r\n      this.clients.push(client);\r\n      if (this.clients.length === 2) {\r\n        client.emit('onReady');\r\n      }\r\n\r\n      client.on('disconnect', () => this.onDisconnect(client));\r\n      client.on('onStep', (data) => this.notifyOtherUser(client, data));\r\n    });\r\n  }\r\n\r\n  public notifyOtherUser(client: SocketIO.Socket, data: GameStepData[]): void {\r\n    // const otherClient = this.clients.find((c) => c.id !== client.id);\r\n    // const newDate = this.swapStepData(data);\r\n    // otherClient.emit('onStepChange', newDate);\r\n  }\r\n\r\n  private onDisconnect(client: SocketIO.Socket): void {\r\n    this.clients.splice(this.clients.indexOf(client), 1);\r\n  }\r\n\r\n  private swapStepData(data: GameStepData[]): GameStepData[] {\r\n    const newData: GameStepData[] = [];\r\n\r\n    data.forEach((gameStepData: GameStepData) => {\r\n      if (gameStepData.id === 1) {\r\n        const newGameStepData: GameStepData = { id: 4, cards: gameStepData.cards };\r\n        newData.push(newGameStepData);\r\n      }\r\n\r\n      if (gameStepData.id === 4) {\r\n        const newGameStepData: GameStepData = { id: 1, cards: gameStepData.cards };\r\n        newData.push(newGameStepData);\r\n      }\r\n\r\n      if (gameStepData.id === 2) {\r\n        const newGameStepData: GameStepData = { id: 3, cards: gameStepData.cards };\r\n        newData.push(newGameStepData);\r\n      }\r\n\r\n      if (gameStepData.id === 3) {\r\n        const newGameStepData: GameStepData = { id: 2, cards: gameStepData.cards };\r\n        newData.push(newGameStepData);\r\n      }\r\n    });\r\n\r\n    return newData;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/socket/socket.service.ts"],"sourceRoot":""}